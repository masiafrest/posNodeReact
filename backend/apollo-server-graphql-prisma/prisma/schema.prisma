// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions", "fullTextSearch"]
}


enum Rol {
  VENDEDOR
  ADMIN
}

model Item {
  id          Int          @id @default(autoincrement())
  barcode     Int?
  image_url   String?
  qty         Int
  descripcion String?
  precio      Precio?
  ubicacion   Ubicacion    @relation(fields: [ubicacionId], references: [id])
  ubicacionId Int
  categorias  Categoria[]
  createdAt   DateTime     @default(now())
  deleted     Boolean      @default(false)
  // search_text String
  // fts Unsupported("tsvector")
  marca Marca @relation(fields: [marcaId], references:[id])
  marcaId Int
  modelos Modelo[]

  lineaVenta  VentaLinea[]
  lineaDevolucion DevolucionLinea[]

}
model Marca {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique
  item      Item[]
  createdAt DateTime @default(now())
}
model Modelo {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique
  item      Item[]
  createdAt DateTime @default(now())
}

model Categoria {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique
  item      Item[]
  createdAt DateTime @default(now())
}

model Precio {
  id        Int      @id @default(autoincrement())
  precio    Decimal  @db.Decimal(5, 2)
  precioMin Decimal  @db.Decimal(5, 2)
  // item Item?
  item      Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    Int
  createdAt DateTime @default(now())
}

model Ubicacion {
  id        Int      @id @default(autoincrement())
  dirrecion String
  tipo      String
  items     Item[]
  createdAt DateTime @default(now())

  @@unique([dirrecion, tipo])
}

model Cliente {
  id          Int      @id @default(autoincrement())
  nombre      String? @unique
  telefono    String?
  dirrecion   String?
  createdAt   DateTime @default(now())
  reciboVenta Venta[]
  reciboDevolucion Devolucion[]
}

model Usuario {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  password    String
  rol         Rol      @default(VENDEDOR)
  reciboVenta Venta[]
  reciboDevolucion Devolucion[]
  createdAt   DateTime @default(now())
}

model Venta {
  id        Int          @id @default(autoincrement())
  usuario   Usuario?     @relation(fields: [usuarioNombre], references: [nombre])
  cliente   Cliente?     @relation(fields: [clienteNombre], references: [nombre])
  usuarioNombre String
  clienteNombre String 
  fecha     DateTime     @default(now())
  credito   Boolean
  subTotal  Decimal      @db.Decimal(6, 2)
  tax       Decimal?     @db.Decimal(6, 2)
  total     Decimal      @db.Decimal(6, 2)
  lineas    VentaLinea[]
}

model VentaLinea {
  id          Int    @id @default(autoincrement())
  item        Item?  @relation(fields: [itemId], references: [id])
  itemId      Int?
  venta       Venta  @relation(fields: [ventaId], references: [id], onDelete: Cascade)
  ventaId     Int
  qty         Int
  precio      Float
  descripcion String
}


model Devolucion {
  id        Int          @id @default(autoincrement())
  usuario   Usuario?     @relation(fields: [usuarioNombre], references: [nombre])
  cliente   Cliente?     @relation(fields: [clienteNombre], references: [nombre])
  usuarioNombre String
  clienteNombre String 
  fecha     DateTime     @default(now())
  lineas DevolucionLinea[]
}

model DevolucionLinea {
  id          Int    @id @default(autoincrement())
  devolucion  Devolucion @relation(fields: [devolucionId], references: [id])
  devolucionId     Int

  item        Item?  @relation(fields: [itemId], references: [id])
  itemId      Int?
  qty         Int
  precio      Float
  descripcion String
  esItemDevolvuelto Boolean
  razon String
}